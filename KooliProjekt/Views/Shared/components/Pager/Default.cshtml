@model PagedResult<Match>

@if (Model?.PageCount > 1)
{
        <div class="pagination">
        @{
            var queryParams = Context.Request.Query
                .Where(q => q.Key != "page")
                .ToDictionary(q => q.Key, q => q.Value.ToString());
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            queryParams["page"] = i.ToString();
            queryParams["pageSize"] = Model.PageSize.ToString();

                    <a href="@Url.Action(null, queryParams)" 
                       class="btn btn-outline-primary @(i == Model.Page ? "active" : "")">
                @i
                    </a>
        }
        </div>
}

<style>
    .pagination {
        margin: 20px 0;
        display: flex;
        gap: 5px;
        flex-wrap: wrap;
    }

    .pagination a.active {
        background: #007bff;
        color: white;
        border-color: #007bff;
    }

    .pagination a:hover:not(.active) {
        background-color: #f8f9fa;
    }
</style>